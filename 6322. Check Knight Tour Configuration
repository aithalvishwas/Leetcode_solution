import java.util.*;

class Solution {
    int[] da = {-2, -1, 1, 2, -2, -1, 1, 2};//x
    int[] db = {-1, -2, -2, -1, 1, 2, 2, 1};//y
    
    public boolean checkValidGrid(int[][] grid) {
        int n = grid.length, m = grid[0].length;
        Queue<int[]> q = new LinkedList<>();
        q.add(new int[]{0, 0});
        int k = 0;
        while (!q.isEmpty()) {
            int got = 0;
            int[] curr = q.poll();
            int x = curr[0], y = curr[1];
            for (int i = 0; i < 8; i++) {
                int nx = x + da[i], ny = y + db[i];
                if (nx >= 0 && nx < n && ny >= 0 && ny < m && grid[nx][ny] == k + 1) {
                    x = nx;
                    y = ny;
                    got = 1;
                    break;
                }
            }
            if (got == 1) {
                q.add(new int[]{x, y});
            }
            k++;
        }
        return k == n * m ? true : false;
    }
}
